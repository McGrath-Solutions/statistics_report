{"version":3,"file":"export.min.js","sources":["../../jssrc/export.js"],"names":["require","baseUrl","paths","jquery","main","$","ReportsGenerator","document","ready","focusedName","elements","children","deselected","is","text","addClass","selected","el","elId","attr","removeClass","focus","translateSchemaInstance","instance","Number","Date","Boolean","String","translateSchema","schema","newSchema","count","length","loadFromAPIObject","res","keys","Object","reportObject","firstSheetKey","i","key","name","information","Generated","Month","monthSelected","yearSelected","data","resData","j","translatedSchema","Table","initializeFromTable","today","thisMonth","getMonth","thisYear","getFullYear","monthSelector","yearDisplay","val","on","month","this","blur","ajax","url","type","dateFor","dataType","success","response","window","location","href","needLogin","fileName","error","jq","status","err","complete","universalClickListener","id","dateString","PDFReport","obj","save","ExcelReport","loading","hide","ajaxStart","show","ajaxStop"],"mappings":"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","sourcesContent":["require({\n  /* Base url in directory above */\n  baseUrl: \"../\",\n  paths: {\n    jquery: \"bower_components/jquery/dist/jquery.min\",\n    main: \"bower_components/reports-generator/dist/compiled-generator.min\"\n  }\n},\n['jquery', 'main'], \nfunction($, ReportsGenerator) {\n  console.log($);\n\n  $(document).ready(function() {\n    console.log(\"ready\");\n    /* helper functions */\n    /* For testing */\n    var printThing = function() {\n      console.log(\"Entered\");\n      console.log(\"Membership focus: \" + $('#membership').is(':focus'));\n      console.log(\"Event focus: \" + $('#event').is(':focus'));\n    };\n\n    var elements = $('#options').children();\n\n    var deselected = function() {\n      /*\n      var mem = $('#membership').is(':focus');\n      var eve = $('#event').is(':focus');\n      */\n     \n      if (!elements.is(':focus')) {\n        $('#selected').text(\"No report type selected.\");\n        $('#downloadLabel').addClass(\"notReady\");\n        $('#download').addClass(\"notReady\");\n        $('#downloadPDF').addClass(\"notReady\");\n        $('#downloadXLS').addClass(\"notReady\");\n      }\n    };\n\n    var selected = function(el) {\n      var elId = el.attr('id');\n      $('#selected').text(\"Selected \" + elId + \" report.\");\n      $('#downloadLabel').removeClass(\"notReady\");\n      $('#download').removeClass(\"notReady\");\n      $('#downloadPDF').removeClass(\"notReady\");\n      $('#downloadXLS').removeClass(\"notReady\");\n      ready = true;\n\n      el.focus();\n      focusedName = elId;\n    };\n\n    var translateSchemaInstance = function(instance) {\n      if (instance === \"number\") {\n        return Number;\n      } else if (instance === \"date\") {\n        return Date;\n      } else if (instance === \"boolean\") {\n        return Boolean;\n      } else if (instance === \"string\") {\n        return String;\n      }\n    }\n\n    var translateSchema = function(schema) {\n      var newSchema = [];\n      for (var count = 0; count < schema.length; count++) {\n        newSchema[count] = translateSchemaInstance(schema[count]);\n      }\n\n      return newSchema;\n    }\n\n    var loadFromAPIObject = function(res) {\n      var keys = Object.keys(res);\n      var reportObject = {};\n\n      var firstSheetKey = keys[0];\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        reportObject[key] = {};\n        reportObject[key].name = res[key].name;\n      }\n\n      reportObject[firstSheetKey].information = {};\n      reportObject[firstSheetKey].information.Generated = new Date();\n      reportObject[firstSheetKey].information.Month = Number(monthSelected + 1) + \"/\" + yearSelected;\n\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        reportObject[key].data = [];\n\n        var resData = res[key].data;\n        for (var j = 0; j < resData.length; j++) {\n          var translatedSchema = translateSchema(resData[j].schema);\n\n          resData[j].schema = translatedSchema;\n          console.log(\"Res Data: \");\n          console.log(resData[i]);\n          reportObject[key].data[j] = ReportsGenerator.Table.initializeFromTable(resData[j]);\n        }\n      }\n\n\n      return reportObject;\n    };\n\n    // Local variables\n    // The ID of the selector being focused on\n    var focusedName;\n\n    // Whether the selectors are ready\n    var ready = true;\n\n    // Date selector-related variables\n    var today = new Date();\n    var thisMonth = today.getMonth();\n    var thisYear = today.getFullYear();\n    var monthSelected = thisMonth;\n    var yearSelected = thisYear;\n\n    // Month select initialization\n    var monthSelector = $('#month');\n    var yearDisplay = $('#year');\n\n    yearDisplay.text(thisYear);\n    monthSelector.val(thisMonth);\n    monthSelector.on('change', function() {\n      var month = Number($(this).val());\n      monthSelected = month;\n      if (thisMonth >= month) {\n        yearDisplay.text(thisYear);\n        yearSelected = thisYear;\n      } else {\n        yearDisplay.text(thisYear - 1);\n        yearSelected = thisYear - 1;\n      }\n    });\n    \n\n    elements.on('click', function() {\n      if (!ready) {\n        return this.blur();\n      }\n\n      selected($(this));\n    })\n\n    /* \n     * Download click callback\n     */\n    $('#download').on('click', function() {\n      // console.log(\"Clicked download\");\n      ready = false;\n      // var curFocused = $('#' + focusedName);\n      // keep focus on curFocused\n      // curFocused.focus();\n      $.ajax({\n        url: \"/generate\",\n        type: \"POST\",\n        data: { \n          type: focusedName,\n          dateFor: new Date(yearSelected, monthSelected, 1)\n        },\n        dataType: \"json\",\n        success: function(response) {\n          // console.log(\"Great success\");\n          // console.log(\"Got response: \");\n          // console.log(JSON.stringify(response));\n          if (response.needLogin) {\n            window.location.href = \"/login\";\n          } else {\n            window.location.href = \"/download/\" + response.fileName;\n          }\n        },\n        error: function(jq, status, err) {\n          console.error(\"Error: \" + err);\n        },\n        complete: function() {\n          ready = true;\n        }\n      })\n    });\n\n    var universalClickListener = function() {\n      var id = $(this).attr('id');\n      console.log(\"Clicked\");\n\n      ready = false;\n      var dateString = Number(monthSelected + 1) + \"-1-\" + yearSelected;\n      var url = \"/api/\" + focusedName + \"/\" + dateString;\n      console.log(dateString);\n\n      $.ajax({\n        url: url,\n        type: \"GET\",\n        dataType: \"json\",\n        success: function(response) {\n          console.log(id);\n          console.log(response);\n\n          if (response.needLogin) {\n            window.location.href = \"/login\";\n          }\n\n          var reportObject = loadFromAPIObject(response);\n\n          \n          var fileName = focusedName + \"-\" + Number(monthSelected + 1) + \"-\" + yearSelected;\n\n          if (id === \"downloadPDF\") {\n            ReportsGenerator.PDFReport(reportObject, function(err, obj) {\n              obj.save(fileName);\n            })\n          } else if (id == \"downloadXLS\") {\n            ReportsGenerator.ExcelReport(reportObject, function(err, obj) {\n              obj.save(fileName);\n            });\n          }\n        },\n        error: function(jq, status, err) {\n          console.error(\"Error: \" + err);\n        },\n        complete: function() {\n          ready = true;\n        }\n      })\n    };\n\n    /* \n     * Client-side based click callback \n     */\n    $('#downloadXLS').on('click', universalClickListener);\n    $('#downloadPDF').on('click', universalClickListener);\n\n    // Clicking the document clears the button (and the selection)\n    $(this).on('click', function() {\n      deselected();\n    });\n\n    // Attach ajax listeners\n    // The loading div\n    var loading = $('#loading').hide();\n    $(this)\n      .ajaxStart(function() {\n        loading.show();\n      })\n      .ajaxStop(function() {\n        loading.hide();\n      });\n  });\n});"]}